<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on Hugo Profile</title>
    <link>https://teduandy.github.io/blog/categories/javascript/</link>
    <description>Recent content in JavaScript on Hugo Profile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Jul 2022 13:47:37 +0000</lastBuildDate><atom:link href="https://teduandy.github.io/blog/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JS 路由參數解析(URL Parameters)</title>
      <link>https://teduandy.github.io/blog/blogs/js-urlparams/</link>
      <pubDate>Tue, 19 Jul 2022 13:47:37 +0000</pubDate>
      
      <guid>https://teduandy.github.io/blog/blogs/js-urlparams/</guid>
      <description>說明： 大部分路由解析都是透過 location.href 然後下去判斷分解取出 Param 的參數 這邊可以使用瀏覽器內建的 URL API 去做解析，獲得 Paramter 參數 教學(URL 介紹) // 創建一個URL物件 const param = new URL(&amp;#34;路由網址&amp;#34;); // 獲取完整路由 param.href; // 取得網址中的主機名稱 param.hostname; // 取得網頁路徑部分 param.pathname; // 取得網址中的通訊協定部分 param.protocol; // 取得網頁參數部分 param.search; param.searchParams; 實際例子 const param = new URL(&amp;#34;https://www.google.com.tw/?hl=zh_TW&amp;#34;) param.href // https://www.google.com.tw/?hl=zh_TW param.hostname // www.google.com.tw param.protocol // https param.search //?hl=zh_TW param.searchParams; // URLSearchParams {} searchParams 會將 參數包成物件，並且可以用 key value 去獲取值 例子 // 套用上面範例已經創建好物件 可以使用searchParams的方法 get、has 兩個 // has 是判斷 參數是否有這個 key const paramOj = param.</description>
    </item>
    
  </channel>
</rss>
